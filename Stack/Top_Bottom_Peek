#include<stdio.h>
#include<stdlib.h>

struct stack{
    int size;
    int top;
    int *arr;
};
/*******************************/
int isEmpty(struct stack * ptr){
if(ptr->top== -1)
    return 1;
else
    return 0;
}
/*******************************/
int isFull(struct stack * ptr){
if(ptr->top==ptr->size-1)
    return 1;
else
    return 0;
}
/*******************************/
void push(struct stack * ptr,int val){

    if(isFull(ptr)){
        printf("Cant push the value %d, will lead to stack overflow!!",val);
    }
    else{

        ptr->top++;
        ptr->arr[ptr->top]=val;
    }
}
/*******************************/
int top(struct stack * ptr){

        return ptr->arr[ptr->top];
}
/*******************************/
int bottom(struct stack * ptr){
    return ptr->arr[0];
}
/*******************************/
int peek(struct stack *ptr,int i){
    int ind=ptr->top-i+1;
    if(ind<0){
        printf("Not a valid position");
        return -1;
        }
    else
        return ptr->arr[ind];

}
/*******************************/


int main(){

    struct stack * s=(struct stack *)malloc(sizeof(struct stack));
    s->size=10;
    s->top=-1;
    s->arr=(int *)malloc(s->size*sizeof(int));

    push(s,23);
    push(s,12);
    push(s,12);
    push(s,19);
    push(s,54);

    printf("The current stack top is %d\n",top(s));
    printf("The current stack bottom is %d",bottom(s));
    
    for(int i=1;i<=s->top+1;i++){
        printf("the value at position %d is %d\n",i,peek(s,i));
    }



}
